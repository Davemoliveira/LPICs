=====================================================================================================================================================
									DISTROS
					Collection of components that form a system distro with different layers.	
	1) Graphical: Interface (Desktop environment, common on Linux desktops (Gnome, KDE, Unity). Allows to navigate the OS with the device hardware.
	2) X-Server: Enables GUI(Graphical user interface), the display server for X windows systems framework for GUI environments.
	3) GNU Core: Basic utils such as [shell] [text editor] [change file permissions][etc].
	4) Linux Kernel: Free open-source OS kernel-framework that connects applications layer to the hardware and respective drivers.
	5) Hardware: Physical devices with compute resources and ability to process and save data for short or long terms. 

					RHEL         GNOME | Init.soft: systemd | Release model: Fixed  | Package: RPM
					CENTOS       GNOME | Init.soft: systemd | Release model: Fixed  | Package: RPM
					FEDORA       GNOME | Init.soft: systemd | Release model: Rolling| Package: RPM
					OPEN.SUSE.   KDE   | Init.soft: systemd | Release model: Rolling| Package: RPM
					UBUNTU       GNOME | Init.soft: systemd | Release model: Rolling| Package: DEB
					DEBIAN       GNOME | Init.soft: systemd | Release model: Rolling| Package: DEB

=====================================================================================================================================================
								  MAIN DIRECTORIES
					/           > Root directory
					/bin        > User binaries (commands that can be run by users)
					/boot       > Static boot files | Bootloader config & parameters & Linux Kernel | Initial RAM disk
					/dev        > device files (block/terminal devices/etc - most pseudo devices)
					/etc        > Configuration files from service and apps
					  |-> /etc/fstab (Partition list to auto mount on the system)
					  |-> /etc/passwd (List of local users & attributes)
					  |-> /etc/group  (List of local users & attributes - GRP,PWD,GID]
					  |-> /etc/hosts  (List IP address/Hostname we want the system to be associated with)
					  |-> /etc/<app>  (Application configuration files - Extension .conf)
					  |-> /etc/resolv.conf (Managed by network manager or Daemon service)
					  |-> /etc/skel   (Boilerplate files/folders for new accounts)
					  |-> /etc/profile(Restart profile)
					/home       > User home directory
					/lib        > Libraries (shared)
					/mnt        > Mount(temp mount)
					/opt        > Optinal packages
					/proc       > Kernel and file processes
					  |-> /proc/cpuinfo 	(CPU info)
					/root       > Root home directory
					/run        > Application state files
					/sbin       > sys.admin binaries (used by root)
					/srv        > Service data
					/tmp        > Temp files (purged after reboot / var/temp(purged after 30 days)
					/usr        > User binaries
					/var        > Variable data files
					  |-> /var/log/messages (General system log messages)
					  |-> /var/log/syslog  (General system log messages- DEBIAN)
					  |-> /var/secure.     (General system log messages- RHE)
					  |-> /var/boot.log    (System Boot logs)
					  |-> /var/cron.log.   (Cron logs)
					  |-> /var/logfail.    (Authentication fails)
					/sys         > System devices(info) | Virtual file system & Data storage
					
=====================================================================================================================================================
								CLOUD/APPLICATIONS
					CLOUD: REGIONS > AVAILABILITY ZONES > SUBNETS > COMPUTER INSTANCES
					SERVER-APPS: Apache & NGINX
					DB SERVER APPS: MYSQL & MARIADB
					FILESHARING APPS: Samba(allows native connection for LANs) & NFS(+local)
					PRIVATE CLOUD APPS: Owncloud & Nextcloud(forked=+enterprise.support)

=====================================================================================================================================================
								PACKAGE MANAGEMENT
					DPKG: Debian archive format that includes metadata(.deb)
					APT: Debian auto install and dependencies (apt-get)	
					RPM: Auto install package (source code)
					YUM: Supports automatic updates and dependencies. DNF is replacing YUM.

=====================================================================================================================================================
								     COMMANDS
1. lsb_release -a (Check distro info)		     	1. w (Current logged user & login hist)	   		1. mdkir | mkdir -p (parent)
2. ls --version (Check foundation utils -alt)	     	2. env (all vars) printenv (vars+values)	  	2. cp -r [][] (copy directo
3. cat /proc/version | cat/etc/issue (distro info).  	3. ls -alsh (List all size human)		   	3. mv [][] (move directory)
4. uname -r | cat /proc/version (Kernel version).    	4. ls -lh				 	   	4. rm -r (delete directory recursively)	
5. x -version (Checks X server version)		     	5. ls -A (List all files, including hidden)   		5. df -h (check disk usage)	

1. ln -s (create symbolic link)			     	1. ip addr show (Current address)		   	1. route (Add route table)
2. x=$(ls) (Execute command on variable)	     	2. ip route show (Current route table)			2. wget (Download files)
3. $HOME (Displays current home directory)	     	3. ifconfig (View & change interface config)		3. getent passwd (List all users)
4. $PS1 (Display primary prompt string)		     	4. netstat | ss (services and active connections)  	4. getent group (list all groups)
5. $PATH (Path where shell looks for commands)	     	5. dig www.x.com (Gives domain details +records)  	5. useradd user (add user)

1. host www.example.com (IPv6, translate DNS))		1. ps aux (Process list | Resource use)			1. ping -c 2 www.x.com (Sends 2 pings)
2. groupadd [opt] (create group)			2. dmesg (View kernel info from ring buffer)	        2. Mapper (translate block devs)
3. chow [opt] user[:group] file (Change file owner)	3. free (Free memory- SWAP=RAM exceeded)		3. Crontab (Lists cron jobs)
4. chow user:user [file]: Change file and group owner	4. lswh (List hardware components)			4. curl (Util to transfer from/to a server)	
5. passwd username (upd.password			5. Lynx | 3wm | Links2 | Elinks (browser)		5. nmcli (Network manager, Print devices + info)

1. mktemp [opt] [template] (Create temp file/dir)	1. tar --delte --file=x.tar file.txt (DelFile		1. tar -c(new) -x -r(Append) -t(List) -f(R/W
2. mktemp (Can be used to create adhoc files/dirs)	2. GZIP: Def.compression used by tar(balanced)		2. BZIP2: Alt (Slower but higher compression)
3. grep (Search for given input on files)		3. ZIP: All-in-one compress/archive util		3. gzip -9 (Compress with max compression level)
4. chmod 777 file1 (Give RWX permissions to all)	4. tar cvf backup.tar *tar (create tar file)		4. tarx xzf x.tar.gz y (Decompress file)
5. netstat -tlnp (tpc listening numeric showPIDs)	5. tar czf backup.tar.gz *.txt  (GZIP)			5. tar cjf backup.tar.bz2 *.txt (BZ2)

1. ? : Match any single character.			1. Escape char: x=Dave\ Oliveira  > Dave Oliveira									
2. * : Match any number of characters.			2. Single quot: x='Dave $surname' > Dave $surname		
3. []: Match character from range.			3. Double quot  x="Dave"$surname" > Dave Oliveira			
4. ^ : Used to match starting character.		4. Escape char: x=Dave\ Oliveira  > Dave Oliveira
5. $ : Used to match ending character.			5. Single quot: x='Dave $surname' > Dave $surname
6. {}: Match more than one pattern.			6. Double quot: x="Dave"$surname" > Dave Oliveira
7. | : Apply more than one condition.			7. 

1. for i in {1..100}; do touch file_$1; done (create 100 files)		1. useradd username (Add user)
2. for i in X Y; do sudo useradd -n $i; done (create mult.users)	2. userdel username (delete user)							
3. for i in x y z; do sudo passwd -l $i; done (Lock user account)	3. chown :group 1.txt (Change file group ownership)
4. PATH=$PATH:$HOME/temp-dir (append directory to the $PATH var)	4. chown username:group 1.txt (Change ownership)
5. echo PATH="$PATH:$HOME/temp-dir"' >> ~/.profile (persistent)		5. chmod g+rx /home/user (Change dir mode to rx group)
6. id username | group username | cat /etc/groups | grep username	6. getent passwd username | cat /etc/passwd | grep username	

=====================================================================================================================================================
								LICENCE

		PUBLIC DOMAIN: Universal domain declaration, work has no restrinctions. License excerpt states that others can copy
		distribute, perform work even for commercial goals without permissions. (Creative Commons 1.0).

		TOO PERMISSIVE(BSD) 4 clauses: [1]Source redistribution retains the above copyright notice. [2] Redistribution in
		binary form must reproduce the above copyright notice that lists of conditions. [3] All ads.material where mentioned
		features or software use, must display the acknowledgement /Product. inc.software by x/ [4] No organization name or
		contributors can be used to endorse or promote products derived from the software without prior permission.
				
		COPY-LEFT(GPL): Workcan only be distributed under the same license terms. Forks can be created towards the right lice.
		which is copied from the left. This license allows commercial modification/distribution, but restricts sub-licensing.
				
		OSI(Open-source Initiative): Individuals from both sides work on a free open-source project, free, modified software
		and open-available source code. 

		FSF(Open Software Foundation): To a software be free, must guarantee 4 freedmons to their users: [1] Run the program
		as they wish for any purpose. [2] Study how the program works/changes/controls/open-source. [3] Redistribute copies
		to help others. [4] Redistribute copies of modified version to the community.

		MAIN DIFFERENCES: Philosophy - lack of focus on the practical benefit of the software and more on ethics/rights/
		FOR CONSIDERATION: Forks license needs examination. Permissive has no restrinctions, Derivative - owner retains
		copyright of the original work.   

=====================================================================================================================================================
								OBSERVATIONS
		Routers: Foward packages between the network			Netfilter: Kernel framewolrk to track dif.connections
		High level: Components						Low level: Supports hardware functions
		Sys-calls are made to Kernel-incorporated			Systemd: System/service manager for Linux OS
		Absolute paths: Start with "/"					Relative paths: unique file/direction location
		Loopback address: How it communicates itself			Hedless install: Only CLI (SSH remote) / No monitor
		Hardware to file hierarchy by /dev and /sys			Kernel Right buffer: Holds Kernel operations messages
		STDIN(0); STDOUT(1); STERR(2)					UID 0(ROOT);1-99(SYS.USER); +100(Standard)65534(Nobody)
		MAC Address: Dev.hardware fingerprint address			WINDOWS SSH(Putty) SSH(SCP)
  		Permissions - 1(Execute) 2(Write) 4(Read)			Lmlinuz files (Kernels)
		LXDE|Mate|XFCE (lightweight desktops)				Unity (Heavy weight desktops)	
		
	/etc/passwd: Username|Pass|UserID|GroupID|GECOS(longName)|Homedir|LoginShell(loginInterprete)
	/etc/shadow: Username|Pass|Lastchanged|Min|Max|wan|Inactive|Expire
	Password=#password value[encrypted] | Lastchanged=Nr days since password change Min/Max=Nr days between password changes    
	Warn= Nr days before pass expiration to warn user | Inactive=Nr days since expiration |Expire=Absolute expiration date
	redirect to multiple files at the same time: echo "Using tee command" | tee *
	
	Script to create automatically 5 folders
	for i in {1..5}; do mkdir folder_$i; done
	
	
